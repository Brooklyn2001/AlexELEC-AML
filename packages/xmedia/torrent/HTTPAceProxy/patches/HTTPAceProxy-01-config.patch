diff -Naurp HTTPAceProxy-f7961c7/aceconfig.py HTTPAceProxy-f7961c7-patch/aceconfig.py
--- HTTPAceProxy-f7961c7/aceconfig.py	2018-02-05 09:47:16.000000000 +0200
+++ HTTPAceProxy-f7961c7-patch/aceconfig.py	2018-02-08 11:28:29.000000000 +0200
@@ -36,7 +36,7 @@ class AceConfig(acedefconfig.AceDefConfi
     # On Windows Ace Engine refreshes acestream.port file only after loading GUI
     # Loading takes about ~10-15 seconds and we need to wait before taking port out of it
     # Set this to 0 if you don't use proxy at startup or don't need to wait
-    acestartuptimeout = 10
+    acestartuptimeout = 5
     # Ace Stream Engine connection timeout
     aceconntimeout = 5
     # Ace Stream Engine authentication result & API port answers timeout
@@ -130,14 +130,14 @@ class AceConfig(acedefconfig.AceDefConfi
     # Logging configuration
     #
     # Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
-    loglevel = logging.DEBUG
+    loglevel = logging.INFO
     # Log message forma
     logfmt = '%(filename)-20s [LINE:%(lineno)-4s]# %(levelname)-8s [%(asctime)s]  %(message)s'
     # Log date forma
     logdatefmt='%d.%m %H:%M:%S'
     # Full path to a log file
     # For Windows OS something like this logfile = "c:\\Python27\\log_AceHttp.txt"
-    logfile = None
+    logfile = '/var/log/aceproxy.log'
 
     # This method is used to detect fake requests. Some players send such
     # requests in order to detect the MIME type and/or check the stream availability.
diff -Naurp HTTPAceProxy-f7961c7/acedefconfig.py HTTPAceProxy-f7961c7-patch/acedefconfig.py
--- HTTPAceProxy-f7961c7/acedefconfig.py	2018-02-05 09:47:16.000000000 +0200
+++ HTTPAceProxy-f7961c7-patch/acedefconfig.py	2018-02-08 12:51:37.000000000 +0200
@@ -3,7 +3,7 @@ AceProxy default configuration script
 DO NOT EDIT THIS FILE!
 Copy this file to aceconfig.py and change only needed options.
 '''
-import logging, colorer
+import logging
 import platform
 from aceclient.acemessages import AceConst
 
@@ -22,7 +22,7 @@ class AceDefConfig(object):
     acestartuptimeout = 10
     aceconntimeout = 5
     aceresulttimeout = 5
-    httphost='0.0.0.0'
+    httphost='0.0.0.0' # 'auto' - for autodetected ext IP
     httpport = 8000
     readchunksize = 8192
     readcachesize = 1024
diff -Naurp HTTPAceProxy-f7961c7/acehttp.py HTTPAceProxy-f7961c7-patch/acehttp.py
--- HTTPAceProxy-f7961c7/acehttp.py	2018-02-05 09:47:16.000000000 +0200
+++ HTTPAceProxy-f7961c7-patch/acehttp.py	2018-02-08 12:52:06.000000000 +0200
@@ -673,13 +673,15 @@ if AceConfig.acespawn or AceConfig.trans
    DEVNULL = open(os.devnull, 'wb')
 
 #### Initial settings for AceHTTPproxy host IP
-if AceConfig.httphost == '0.0.0.0':
+if AceConfig.httphost == 'auto':
    s = socket(AF_INET, SOCK_DGRAM)
    s.connect(("gmail.com",80))
    if s.getsockname()[0]:
      AceConfig.httphost = s.getsockname()[0]
-     logger.debug('Ace Stream HTTP Proxy server IP: %s autodetected' % AceConfig.httphost)
+     logger.info('Ace Stream HTTP Proxy server IP: %s autodetected' % AceConfig.httphost)
    s.close()
+else:
+    logger.info('Ace Stream HTTP Proxy server IP: %s' % AceConfig.httphost)
 
 # Check whether we can bind to the defined port safely
 if AceConfig.osplatform != 'Windows' and os.getuid() != 0 and AceConfig.httpport <= 1024:
@@ -718,7 +720,7 @@ except AttributeError:
 if AceConfig.osplatform == 'Windows':
      name = 'ace_engine.exe'
 else:
-     name = 'acestreamengine'
+     name = 'acestream.start'
 ace_pid = findProcess(name)
 AceStuff.ace = None
 if not ace_pid:
