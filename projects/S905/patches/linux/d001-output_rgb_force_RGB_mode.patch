diff -Naurp linux-d560977/drivers/amlogic/hdmi/hdmi_tx_20/hdmi_tx_main.c linux-d560977-patch/drivers/amlogic/hdmi/hdmi_tx_20/hdmi_tx_main.c
--- linux-d560977/drivers/amlogic/hdmi/hdmi_tx_20/hdmi_tx_main.c	2017-06-04 11:16:08.000000000 +0300
+++ linux-d560977-patch/drivers/amlogic/hdmi/hdmi_tx_20/hdmi_tx_main.c	2017-12-18 09:26:13.000000000 +0200
@@ -2154,6 +2154,20 @@ void hdmi_print(int dbg_lvl, const char
 	}
 }
 
+static ssize_t store_output_rgb(struct device *dev,
+	struct device_attribute *attr, const char *buf, size_t count)
+{
+	if (strncmp(buf, "1", 1) == 0)
+		hdmitx_output_rgb();
+
+	hdmitx_set_display(&hdmitx_device, hdmitx_device.cur_VIC);
+
+	return count;
+}
+
+static DEVICE_ATTR(output_rgb, S_IWUSR | S_IWGRP,
+	NULL, store_output_rgb);
+
 static DEVICE_ATTR(disp_mode, S_IWUSR | S_IRUGO | S_IWGRP,
 	show_disp_mode, store_disp_mode);
 static DEVICE_ATTR(attr, S_IWUSR | S_IRUGO | S_IWGRP, show_attr, store_attr);
@@ -3079,6 +3093,7 @@ static int amhdmitx_probe(struct platfor
 	ret = device_create_file(dev, &dev_attr_support_3d);
 	ret = device_create_file(dev, &dev_attr_dc_cap);
 	ret = device_create_file(dev, &dev_attr_valid_mode);
+	ret = device_create_file(dev, &dev_attr_output_rgb);
 
 #ifdef CONFIG_AM_TV_OUTPUT
 	vout_register_client(&hdmitx_notifier_nb_v);
@@ -3285,6 +3300,7 @@ static int amhdmitx_remove(struct platfo
 	device_remove_file(dev, &dev_attr_hdcp_pwr);
 	device_remove_file(dev, &dev_attr_aud_output_chs);
 	device_remove_file(dev, &dev_attr_div40);
+	device_remove_file(dev, &dev_attr_output_rgb);
 
 	cdev_del(&hdmitx_device.cdev);
 
@@ -3320,6 +3336,9 @@ static int amhdmitx_suspend(struct platf
 		hdmitx_device.HWOp.CntlMisc(&hdmitx_device,
 			MISC_TMDS_PHY_OP, TMDS_PHY_DISABLE);
 #endif
+	if (hdmitx_device.HWOp.Cntl)
+		hdmitx_device.HWOp.CntlMisc(&hdmitx_device,
+				MISC_TMDS_PHY_OP, TMDS_PHY_DISABLE);
 	return 0;
 }
 
diff -Naurp linux-d560977/drivers/amlogic/hdmi/hdmi_tx_20/hdmi_tx_video.c linux-d560977-patch/drivers/amlogic/hdmi/hdmi_tx_20/hdmi_tx_video.c
--- linux-d560977/drivers/amlogic/hdmi/hdmi_tx_20/hdmi_tx_video.c	2017-06-04 11:16:08.000000000 +0300
+++ linux-d560977-patch/drivers/amlogic/hdmi/hdmi_tx_20/hdmi_tx_video.c	2017-12-18 09:26:56.000000000 +0200
@@ -33,7 +33,7 @@
 #include <linux/amlogic/hdmi_tx/hdmi_tx_module.h>
 #include <linux/amlogic/hdmi_tx/hdmi_tx_compliance.h>
 
-static unsigned char hdmi_output_rgb;
+unsigned char hdmi_output_rgb;
 static void hdmitx_set_spd_info(struct hdmitx_dev *hdev);
 static void hdmi_set_vend_spec_infofram(struct hdmitx_dev *hdev,
 	enum hdmi_vic VideoCode);
@@ -647,7 +647,8 @@ int hdmitx_set_display(struct hdmitx_dev
 				break;
 			}
 			if (param->color == COLORSPACE_RGB444) {
-				hdev->para->cs = hdev->cur_video_param->color;
+				hdev->para->cs = COLORSPACE_RGB444;
+				hdev->para->cd = COLORDEPTH_24B;
 				pr_info("hdmitx: rx edid only support RGB format\n");
 			}
 
diff -Naurp linux-d560977/drivers/amlogic/hdmi/hdmi_tx_20/hw/hdmi_tx_hw.c linux-d560977-patch/drivers/amlogic/hdmi/hdmi_tx_20/hw/hdmi_tx_hw.c
--- linux-d560977/drivers/amlogic/hdmi/hdmi_tx_20/hw/hdmi_tx_hw.c	2017-12-18 09:15:33.000000000 +0200
+++ linux-d560977-patch/drivers/amlogic/hdmi/hdmi_tx_20/hw/hdmi_tx_hw.c	2017-12-18 09:28:43.000000000 +0200
@@ -78,6 +78,8 @@ static void hdmitx_set_avi_colorimetry(s
 
 unsigned char hdmi_pll_mode = 0; /* 1, use external clk as hdmi pll source */
 
+extern unsigned char hdmi_output_rgb;
+
 /* HSYNC polarity: active high */
 #define HSYNC_POLARITY	 1
 /* VSYNC polarity: active high */
@@ -3781,7 +3783,7 @@ static int hdmitx_hdmi_dvi_config(struct
 		hdmitx_set_reg_bits(HDMITX_DWC_FC_AVICONF0, 0, 0, 2);
 #else
 		hdmitx_csc_config(TX_INPUT_COLOR_FORMAT,
-			TX_OUTPUT_COLOR_FORMAT, TX_COLOR_DEPTH);
+			COLORSPACE_RGB444, TX_COLOR_DEPTH);
 #endif
 
 		/* set dvi flag */
@@ -3793,7 +3795,11 @@ static int hdmitx_hdmi_dvi_config(struct
 		hdmitx_wr_reg(HDMITX_DWC_MC_FLOWCTRL, 0x0);
 
 		/* set ycc indicator */
-		if (hdev->para->cs == COLORSPACE_YUV420)
+		if (hdmi_output_rgb) {
+			hdmitx_csc_config(TX_INPUT_COLOR_FORMAT,
+				COLORSPACE_RGB444, TX_COLOR_DEPTH);
+			hdmitx_set_reg_bits(HDMITX_DWC_FC_INVIDCONF, 0, 3, 1);
+		} else if (hdev->para->cs == COLORSPACE_YUV420)
 			hdmitx_set_reg_bits(HDMITX_DWC_FC_AVICONF0, 3, 0, 2);
 		else
 			hdmitx_set_reg_bits(HDMITX_DWC_FC_AVICONF0, 2, 0, 2);
