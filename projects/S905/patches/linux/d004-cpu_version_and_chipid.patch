diff -Naurp linux-d560977/arch/arm64/kernel/setup.c linux-d560977-patch/arch/arm64/kernel/setup.c
--- linux-d560977/arch/arm64/kernel/setup.c	2017-06-04 11:16:08.000000000 +0300
+++ linux-d560977-patch/arch/arm64/kernel/setup.c	2018-03-01 15:09:55.000000000 +0200
@@ -439,6 +439,9 @@ static int c_show(struct seq_file *m, vo
 {
 	int i;
 	int rev;
+#ifdef CONFIG_AMLOGIC_CPU_INFO
+	unsigned int low0, low1, high0, high1;
+#endif
 
 	seq_printf(m, "Processor\t: %s rev %d (%s)\n",
 		   cpu_name, read_cpuid_id() & 15, ELF_PLATFORM);
@@ -482,9 +485,9 @@ static int c_show(struct seq_file *m, vo
 
 	seq_printf(m, "Hardware\t: %s\n", machine_name);
 #ifdef CONFIG_AMLOGIC_CPU_INFO
+	cpuinfo_get_chipid(&low0, &low1, &high0, &high1);
 	seq_printf(m, "Serial\t\t: %08x%08x%08x%08x\n",
-		   system_serial_high1, system_serial_high0,
-		   system_serial_low1, system_serial_low0);
+		   high1, high0, low1, low0);
 
 	rev = 0x0200 | get_meson_cpu_version(MESON_CPU_VERSION_LVL_MINOR);
 	seq_printf(m, "Revision\t: %04x\n", rev);
diff -Naurp linux-d560977/drivers/amlogic/cpu_info/cpu_info.c linux-d560977-patch/drivers/amlogic/cpu_info/cpu_info.c
--- linux-d560977/drivers/amlogic/cpu_info/cpu_info.c	2017-06-04 11:16:08.000000000 +0300
+++ linux-d560977-patch/drivers/amlogic/cpu_info/cpu_info.c	2018-03-01 15:04:16.000000000 +0200
@@ -27,8 +27,11 @@ unsigned int system_serial_high1;
 struct aml_cpu_info {
 	unsigned int version;
 	u8 chipid[12];
-	unsigned int reserved[103];
+	unsigned int  cpuid;
+	unsigned int reserved[102];
 };
+#define MAGIC_31		0xB31B31
+#define MATCH_31(magic)	(((magic >> 8) & 0xffffff) == MAGIC_31)
 static void __iomem *sharemem_output;
 static struct aml_cpu_info *cpu_info_buf;
 static noinline int fn_smc(u64 function_id, u64 arg0, u64 arg1,
@@ -55,10 +58,6 @@ static int cpuinfo_probe(struct platform
 	struct device_node *np = pdev->dev.of_node;
 	unsigned id;
 	unsigned int *p = NULL;
-	unsigned int version =
-		(get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR) << 24) |
-		(get_meson_cpu_version(MESON_CPU_VERSION_LVL_MINOR) << 16) |
-		(get_meson_cpu_version(MESON_CPU_VERSION_LVL_PACK) << 8);
 
 	if (!of_property_read_u32(np, "cpuinfo_cmd", &id))
 		cpuinfo_func_id = id;
@@ -73,7 +72,7 @@ static int cpuinfo_probe(struct platform
 		return  -ENOMEM;
 	}
 	sharemem_mutex_lock();
-	fn_smc(cpuinfo_func_id, 0, 0, 0);
+	fn_smc(cpuinfo_func_id, 1, 0, 0);
 	memcpy((void *)cpu_info_buf,
 		(const void *)sharemem_output, sizeof(struct aml_cpu_info));
 	sharemem_mutex_unlock();
@@ -88,12 +87,29 @@ static int cpuinfo_probe(struct platform
 	system_serial_low0 = *p;
 	system_serial_low1 = *(p+1);
 	system_serial_high0 = *(p+2);
-	system_serial_high1 = version;
+	if (MATCH_31(cpu_info_buf->version) && (cpu_info_buf->version & 0xff))
+		system_serial_high1 = cpu_info_buf->cpuid;
+	else {
+		unsigned int version =
+		(get_meson_cpu_version(MESON_CPU_VERSION_LVL_MAJOR) << 24) |
+		(get_meson_cpu_version(MESON_CPU_VERSION_LVL_MINOR) << 16) |
+		(get_meson_cpu_version(MESON_CPU_VERSION_LVL_PACK) << 8);
+		system_serial_high1 = version;
+	}
 
 	pr_info("probe done\n");
 	return 0;
 }
 
+void cpuinfo_get_chipid(unsigned int *low0, unsigned int *low1,
+		unsigned int *high0, unsigned int *high1)
+{
+	*low0 = system_serial_low0;
+	*low1 = system_serial_low1;
+	*high0 = system_serial_high0;
+	*high1 = system_serial_high1;
+}
+
 static const struct of_device_id cpuinfo_dt_match[] = {
 	{ .compatible = "amlogic, cpuinfo" },
 	{ /* sentinel */ },
diff -Naurp linux-d560977/include/linux/amlogic/cpu_version.h linux-d560977-patch/include/linux/amlogic/cpu_version.h
--- linux-d560977/include/linux/amlogic/cpu_version.h	2017-06-04 11:16:08.000000000 +0300
+++ linux-d560977-patch/include/linux/amlogic/cpu_version.h	2018-03-01 15:04:16.000000000 +0200
@@ -56,11 +56,8 @@
 #define MESON_CPU_VERSION_LVL_PACK	2
 #define MESON_CPU_VERSION_LVL_MISC	3
 #define MESON_CPU_VERSION_LVL_MAX	MESON_CPU_VERSION_LVL_MISC
-extern unsigned int system_serial_low0;
-extern unsigned int system_serial_low1;
-extern unsigned int system_serial_high0;
-extern unsigned int system_serial_high1;
-
+void cpuinfo_get_chipid(unsigned int *low0, unsigned int *low1,
+		unsigned int *high0, unsigned int *high1);
 int  meson_cpu_version_init(void);
 #ifdef CONFIG_AML_CPU_VERSION
 int get_meson_cpu_version(int level);
